import dotenv from "dotenv"
import Joi from "joi"
import { readFileSync } from "fs"

dotenv.config()

const envVarsSchema = Joi.object({
  TELEGRAM_TOKEN: Joi.string().description("Telegram token")
})

const { error, value: envVars } = envVarsSchema.validate(process.env)
if (error) new Error(`Config validation error: ${error.message}`)

const getWgParams = (): WgParams => {
  const file = readFileSync("/etc/wireguard/params", "utf-8")
  if (!file) throw Error('Get wireguard params error')

  const params = file.split("\n")
  if (!params) throw Error('Get wireguard params error')

  const result: WgParams = {
    SERVER_PUB_IP: '',
    SERVER_PUB_NIC: '',
    SERVER_WG_NIC: '',
    SERVER_WG_IPV4: '',
    SERVER_WG_IPV6: '',
    SERVER_PORT: '',
    SERVER_PRIV_KEY: '',
    SERVER_PUB_KEY: '',
    CLIENT_DNS_1: '',
    CLIENT_DNS_2: '',
    ALLOWED_IPS: ''
  }

  Object.keys(result).map(key => {
    for (const param of params) {
      if (param.includes(`${key}=`)) {
        const value = param.replace(`${key}=`, "")
        if (!value) continue

        result[key as keyof WgParams] = value
      }
    }

    if (!result[key as keyof WgParams]) throw Error(`${key} not found`)
  })

  return result
}

export default {
  telegramToken: envVars.TELEGRAM_TOKEN,

  wgParams: getWgParams(),

  phrases: {
    START_MESSAGE: "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ F√≠darVPN* \n\nüöÄ –í—ã—Å–æ–∫–æ—Å–æ—Ä–æ—Å—Ç–Ω–æ–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π VPN —Å –±–µ–∑–ª–∏–º—Ç–Ω—ã–º —Ç—Ä–∞—Ñ–∏–∫–æ–º \n\n",
    HELP_MESSAGE: "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏ @gazzati",
    ERROR_MESSAGE: "ü§∑‚Äç‚ôÇÔ∏è –ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ",
    ALREADY_EXIST_MESSAGE: "ü§ù –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è",
    DONE_MESSAGE: "‚úÖ –ì–æ—Ç–æ–≤–æ, –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR –∫–æ–¥ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–∞–π–ª —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π",
    MANUAL_MESSAGE: "‚öôÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: \n\n1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ\n\n2Ô∏è‚É£ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –ª–∏–±–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR \n\n3Ô∏è‚É£ –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è VPN –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n\n"
  },

  inlineKeyboard: {
    start: [[{ text: "üåé –ü–æ–ª—É—á–∏—Ç—å VPN", callback_data: "vpn" }]],
    done: [[{ text: "üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data: "manual" }]],
    manual: [
      [
        { text: "üì≤ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Iphone", url: "https://itunes.apple.com/us/app/wireguard/id1441195209?ls=1&mt=8" },
        { text: "üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Android", url: "https://play.google.com/store/apps/details?id=com.wireguard.android" }
      ],
      [
        { text: "üíª –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è macOS", url: "https://apps.apple.com/ru/app/wireguard/id1451685025" },
        { text: "üñ•Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Windows", url: "https://download.wireguard.com/windows-client/wireguard-installer.exe" }
      ]
    ],
  }
}
